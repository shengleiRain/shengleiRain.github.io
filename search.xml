<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+Halo博客同步方案</title>
    <url>/posts/2325625073/</url>
    <content><![CDATA[<p>在使用hexo+github pages搭建个人博客之后，仍然想进一步折腾（虽然可能是浪费时间的）。之前在我的华为云上搭建了一个基于Halo的博客，我就在想能不能将GitHub上面的博客内容同步到Halo博客上。因此，此时我需要解决的问题有如下几个：</p>
<ul>
<li>GitHub上的博客仓库私有，生成的github pages项目为公共仓库</li>
<li>同步github pages和Halo博客上的内容</li>
</ul>
<span id="more"></span>

<h2 id="将博客仓库私有"><a href="#将博客仓库私有" class="headerlink" title="将博客仓库私有"></a>将博客仓库私有</h2><p>在<a href="/posts/1772258976/" title="Hexo+Next博客搭建记录">Hexo+Next博客搭建记录</a>中，在修改完博客文本之后，我需要使用<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>这行代码将博客内容发布到github pages上。但是利用github actions自动化部署的功能，可以在提交博客源文件到GitHub上自动触发博客部署。而我又想将我的博客源文件放到一个私有仓库中，在网上查找了许久，终于找到了这一篇文章<a href="https://www.fewth.com/%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B8%83%E7%BD%B2hexo%E5%8D%9A%E5%AE%A2-%E4%BB%8E%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E5%88%B0%E5%85%AC%E5%85%B1%E4%BB%93%E5%BA%93/">用github actions自动化布署hexo博客-从私有仓库到公共仓库</a>解决了我的问题。</p>
<h3 id="创建一个仓库"><a href="#创建一个仓库" class="headerlink" title="创建一个仓库"></a>创建一个仓库</h3><p>在GitHub上创建一个私有仓库，具体过程这里不说。</p>
<p>值得注意的是，在将博客项目复制到该私有仓库目录下的时候，如果我们的主题，例如<code>theme/next</code>是通过git的方式pull下来的，那就需要将<code>theme/next</code>目录下的<code>.git</code>文件夹删除掉，否则会出错。不过这样的话，我们就不能通过<code>git pull</code>的方式来更新Next主题了。</p>
<h3 id="编写github-actions脚本"><a href="#编写github-actions脚本" class="headerlink" title="编写github actions脚本"></a>编写github actions脚本</h3><p>创建一个<code>.github/workflows/pages.yml</code>文件, 参考<a href="https://hexo.io/docs/github-pages.html">Hexo官方脚本</a>，稍微修改下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Pages</span> <span class="comment">#脚本名称</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> </span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span>  <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">pages:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> <span class="comment">#虚拟环境</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span> <span class="comment">#uses指令就是用的其它的现成的脚本</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">18.</span><span class="string">x</span> <span class="comment">#name只是提供一个名称</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span>                     <span class="comment">#可以用with提供参数信息</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;18.x&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">#上面的操作都是为了准备环境</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">＃生成</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span> <span class="comment">#这里需要保证你博客根目录下的package.json文件中有这个脚本，没有的话添加一下&quot;build&quot;: &quot;hexo generate&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">personal_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY</span> <span class="string">&#125;&#125;</span> <span class="comment">#HEXO_DEPLOY这个名称跟源文件仓库中设置的要对应</span></span><br><span class="line">          <span class="attr">external_repository:</span> <span class="string">shengleiRain/shengleiRain.github.io</span>  <span class="comment">#添加部署的目标仓库，也就是github.io对应的仓库，由＂用户名／仓库名＂的方式指定</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span> <span class="comment">#需要发布的文件目录，hexo generate生成的就是./public</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">gh-pages</span>  <span class="comment"># deploying branch 部署的分支，对应我们的external_repository</span></span><br></pre></td></tr></table></figure>
<p>其中<code>secrets.HEXO_DEPLOY</code>需要在项目仓库<code>Settings</code>下的<code>secrets and variables</code>中创建。</p>
<p><img src="https://img.yiyayobj.com/20231018220205.png" alt="20231018220205"></p>
<h2 id="Hexo同步到Halo"><a href="#Hexo同步到Halo" class="headerlink" title="Hexo同步到Halo"></a>Hexo同步到Halo</h2><p>参考<a href="https://linshenkx.github.io/my-blog-system-design/">个人博客系统设计(支持hexo和halo同步) </a>和github开源项目<a href="https://github.com/linshenkx/haloSyncServer">haloSyncServer</a>。不过直接用docker拉取haloSyncServer镜像运行的时候，惊喜地发现并不能成功，查看日志发现，登录授权失败，一些接口已经404。无奈之下，查找halo openapi，最终发现haloSyncServer使用的api是halo v1版本的，然而，我运行的halo版本是2.8.0，api已经发生了翻天覆地的变化。</p>
<p>于是，只能根据<a href="https://demo.halo.run/webjars/swagger-ui/index.html">Halo api v2</a>,在haloSyncServer框架的基础上，形成了我的HaloSyncServer-v2，最终实现了Hexo同步到Halo。</p>
<p>我更改后的项目github地址为： <a href="https://github.com/shengleiRain/haloSyncServer-v2">https://github.com/shengleiRain/haloSyncServer-v2</a></p>
<p>后续还可能在增加新的功能。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.fewth.com/%E7%94%A8github-actions%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B8%83%E7%BD%B2hexo%E5%8D%9A%E5%AE%A2-%E4%BB%8E%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E5%88%B0%E5%85%AC%E5%85%B1%E4%BB%93%E5%BA%93/">用github actions自动化布署hexo博客-从私有仓库到公共仓库</a></p>
<p><a href="https://github.com/linshenkx/haloSyncServer">haloSyncServer</a></p>
<p><a href="https://linshenkx.github.io/my-blog-system-design/">个人博客系统设计(支持hexo和halo同步) </a></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>halo</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next博客上使用Waline评论系统</title>
    <url>/posts/2935919510/</url>
    <content><![CDATA[<p>为了增强博客的交互性，一个好用的评论系统是很有必要的（主要是自己想折腾一下），于是找到了<code>Waline</code>这个评论系统，下面记录下配置过程。</p>
<span id="more"></span>

<p><a href="https://theme-next.js.org/docs/third-party-services/comments">Next评论系统官方文档</a>，介绍了多种评论系统的开启方式，下面我介绍没有内置的评论系统。</p>
<h2 id="Next集成waline评论前端页面"><a href="#Next集成waline评论前端页面" class="headerlink" title="Next集成waline评论前端页面"></a>Next集成waline评论前端页面</h2><p><a href="https://waline.js.org/guide/get-started/">waline的文档</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pnpm install @waline/hexo-next</span><br></pre></td></tr></table></figure>
<p>然后，在blog或者Next的配置文件中，加上：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Waline Config File</span></span><br><span class="line"><span class="comment"># For more information:</span></span><br><span class="line"><span class="comment"># - https://waline.js.org</span></span><br><span class="line"><span class="comment"># - https://waline.js.org/reference/component.html</span></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="comment"># New! Whether enable this plugin</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Waline server address url, you should set this to your own link</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="string">xxx</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Waline library CDN url, you can set this to your preferred CDN</span></span><br><span class="line">  <span class="attr">libUrl:</span> <span class="string">https://unpkg.com/@waline/client@v2/dist/waline.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Waline CSS styles CDN url, you can set this to your preferred CDN</span></span><br><span class="line">  <span class="attr">cssUrl:</span> <span class="string">https://unpkg.com/@waline/client@v2/dist/waline.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom locales</span></span><br><span class="line">  <span class="attr">locale:</span></span><br><span class="line">    <span class="attr">placeholder:</span> <span class="string">欢迎大家踊跃发言！</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">commentCount:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Pageviews count, <span class="doctag">Note:</span> You should not enable both `waline.pageview` and `leancloud_visitors`.</span></span><br><span class="line">  <span class="attr">pageview:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom emoji</span></span><br><span class="line">  <span class="attr">emoji:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://unpkg.com/@waline/emojis@1.0.1/weibo</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://unpkg.com/@waline/emojis@1.0.1/alus</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://unpkg.com/@waline/emojis@1.0.1/bilibili</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://unpkg.com/@waline/emojis@1.0.1/qq</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://unpkg.com/@waline/emojis@1.0.1/tieba</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">https://unpkg.com/@waline/emojis@1.0.1/tw-emoji</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Comment infomation, valid meta are nick, mail and link</span></span><br><span class="line">  <span class="attr">meta:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">nick</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">mail</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">link</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Set required meta field, e.g.: [nick] | [nick, mail]</span></span><br><span class="line">  <span class="attr">requiredMeta:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">nick</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Language, available values: en-US, zh-CN, zh-TW, pt-BR, ru-RU, jp-JP</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">zh-CN</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Word limit, no limit when setting to 0</span></span><br><span class="line">  <span class="comment"># wordLimit: 0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Whether enable login, can choose from &#x27;enable&#x27;, &#x27;disable&#x27; and &#x27;force&#x27;</span></span><br><span class="line">  <span class="attr">login:</span> <span class="string">enable</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># comment per page</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 文章增加表情互动功能  </span></span><br><span class="line">  <span class="attr">reaction:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">copyright:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="string">imageUploader</span></span><br></pre></td></tr></table></figure>

<h3 id="适配Next暗黑模式："><a href="#适配Next暗黑模式：" class="headerlink" title="适配Next暗黑模式："></a>适配Next暗黑模式：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dark: &#x27;body.darkmode--activated&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="数据库服务支持"><a href="#数据库服务支持" class="headerlink" title="数据库服务支持"></a>数据库服务支持</h2><p>我是搭设在自己的云服务器上的，使用<code>docker</code>安装<code>mysql</code>（这一步，可以在网上搜索查找）。</p>
<p>另外，其他数据库服务，可以参考<a href="https://waline.js.org/guide/database.html">多数据库服务支持</a>， 也可以参照<a href="https://waline.js.org/guide/get-started/">快速上手</a>LeanCloud等服务（反正我搭设之后，报各种错误）。</p>
<h2 id="后端部署"><a href="#后端部署" class="headerlink" title="后端部署"></a>后端部署</h2><p>参考【部署】那一小节，选择自己想用的部署方式，不过，免费的云服务，我都没有搞成功，账号注册的时候就失败了，例如：Vercel部署。所以只能部署在自己的云服务器上了。</p>
<p>拉取<code>lizheming/waline</code>镜像，最后运行镜像。</p>
<p>使用docker compose运行方式，docker-compose.yaml如下（同时安装了mysql和waline，如果已经安装过mysql,则可以删掉mysql部分），更改一些参数可以了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">version: &quot;3.5&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:5.7.26</span><br><span class="line">    container_name: waline-mysql</span><br><span class="line">    restart: always</span><br><span class="line">    privileged: false</span><br><span class="line">    environment:</span><br><span class="line">      TZ: &#x27;Asia/Shanghai&#x27;</span><br><span class="line">      MYSQL_ROOT_PASSWORD: yourPassword</span><br><span class="line">    ports:</span><br><span class="line">        - 3306:3306</span><br><span class="line">    networks:</span><br><span class="line">      waline-network:</span><br><span class="line">        ipv4_address: 172.23.0.3</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x27;/usr/local/docker-volumes/mysql/conf:/etc/mysql/conf.d&#x27;</span><br><span class="line">      - &#x27;/usr/local/docker-volumes/mysql/data:/var/lib/mysql&#x27;</span><br><span class="line">      - &#x27;/usr/local/docker-volumes/mysql/log:/var/log/mysql&#x27;</span><br><span class="line">    command: --default-authentication-plugin=mysql_native_password</span><br><span class="line"></span><br><span class="line">  waline:</span><br><span class="line">    container_name: waline</span><br><span class="line">    image: lizheming/waline:latest</span><br><span class="line">    restart: always</span><br><span class="line">    privileged: false</span><br><span class="line">    depends_on:</span><br><span class="line">      - mysql</span><br><span class="line">    ports:</span><br><span class="line">      - 8360:8360</span><br><span class="line">    networks:</span><br><span class="line">      waline-network:</span><br><span class="line">        ipv4_address: 172.23.0.4</span><br><span class="line">    environment:</span><br><span class="line">      TZ: &quot;Asia/Shanghai&quot;</span><br><span class="line">      AKISMET_KEY: &quot;true&quot;</span><br><span class="line">      DISABLE_USERAGENT: &quot;false&quot;</span><br><span class="line">      SMTP_USER: &quot;xxx@qq.com&quot;</span><br><span class="line">      SMTP_PASS: &quot;xxx&quot;</span><br><span class="line">      SMTP_SECURE: &quot;false&quot;</span><br><span class="line">      SITE_NAME: &quot;Your site name&quot;</span><br><span class="line">      SECURE_DOMAINS: &quot;example.cn&quot;</span><br><span class="line">      AUTHOR_EMAIL: &quot;example@qq.com&quot;</span><br><span class="line">      SITE_URL: &quot;https://www.example.cn&quot;</span><br><span class="line">      MYSQL_HOST: 172.23.0.3</span><br><span class="line">      MYSQL_PORT: 3306</span><br><span class="line">      MYSQL_DB: waline</span><br><span class="line">      MYSQL_PREFIX: wl_</span><br><span class="line">      MYSQL_USER: root</span><br><span class="line">      MYSQL_PASSWORD: yourPassword</span><br><span class="line">    volumes:</span><br><span class="line">      - /usr/local/waline/data:/app/data</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  waline-network:</span><br><span class="line">    name: waline-network</span><br><span class="line">    driver: bridge</span><br><span class="line">    ipam:</span><br><span class="line">      config:</span><br><span class="line">        - subnet: 172.89.0.0/24</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">    1panel-network:</span><br><span class="line">        external: true</span><br></pre></td></tr></table></figure>

<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.techgrow.cn/posts/ae18fb85.html">Hexo Next 主题使用 Waline 评论系统</a></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>waline评论系统</tag>
        <tag>Next主题</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+Next博客搭建记录</title>
    <url>/posts/1772258976/</url>
    <content><![CDATA[<h2 id="1-博客搭建背景"><a href="#1-博客搭建背景" class="headerlink" title="1. 博客搭建背景"></a>1. 博客搭建背景</h2><p>人活一世，总要记录点什么，于是就产生了搭建个人博客的想法。不过这种想法，老早之前就产生过，并且也实践过一段时间，用<code>jekyll+github pages</code>搭设了个人博客，记录了寥寥可数的几篇文章。最近，购置了一台云服务器，所以又想重拾旧业，再次折腾下个人博客。这次采用<code>Hexo + github pages + 同步博客到Halo</code>的方式，<code>github pages</code>主要记录技术方面的笔记，同步到Halo博客上，Halo博客上多布置些其他内容。大概的安排如下：</p>
<ul>
<li>搭建Hexo博客，使用Next主题，部署到github上</li>
<li>Next主题美化，参考<a href="https://www.mickeymiao.top/posts/f9b8ceb/">博客</a>等方案，<a href="https://hexo.io/zh-cn/docs/github-pages">官方文档</a></li>
<li>同步博客到Halo,使用<a href="https://linshenkx.github.io/my-blog-system-design/">个人博客系统设计(支持hexo和halo同步)</a> 的方案</li>
</ul>
<span id="more"></span>

<h2 id="2-搭建Hexo-Next博客"><a href="#2-搭建Hexo-Next博客" class="headerlink" title="2. 搭建Hexo + Next博客"></a>2. 搭建Hexo + Next博客</h2><h3 id="2-1-安装Hexo-同步到github"><a href="#2-1-安装Hexo-同步到github" class="headerlink" title="2.1. 安装Hexo, 同步到github"></a>2.1. 安装Hexo, 同步到github</h3><p>安装Hexo之前，这些程序的安装是必须的</p>
<ul>
<li>git</li>
<li>node.js</li>
<li>如果没有github账号，需要先创建github账号</li>
</ul>
<p>具体安装过程，我这里就不赘述了，可以参考</p>
<p><a href="https://note-xuezhizhang.readthedocs.io/en/latest/%E5%8D%9A%E5%AE%A2%E8%BF%90%E7%BB%B4/hexo%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97%E2%80%94%E2%80%94hexo%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B.html">Hexo安装教程</a></p>
<p>编译清理，生成和开启服务,部署到github上的命令，我推荐用以下，这样更不容易出现问题。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./node_modules/.bin/hexo clean </span><br><span class="line">./node_modules/.bin/hexo generate  </span><br><span class="line">./node_modules/.bin/hexo server</span><br><span class="line">./node_modules/.bin/hexo deploy</span><br></pre></td></tr></table></figure>
<p>我之前在更改主题为Next之后，使用<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code>这行命令，报错：<code>Error: ENOENT: no such file or directory</code>, 最后找到该文档解决：</p>
<p><a href="https://hexo.io/docs/troubleshooting.html#Error-ENOENT-no-such-file-or-directory">Error: ENOENT: no such file or directory</a></p>
<h3 id="2-2-Next主题安装和美化"><a href="#2-2-Next主题安装和美化" class="headerlink" title="2.2. Next主题安装和美化"></a>2.2. Next主题安装和美化</h3><p><a href="https://theme-next.js.org/docs/">Next.js官方docs</a>, 这个写得挺全面，而且布局看起来也很舒服，就是用的Next主题。不过是英文文档。</p>
<h4 id="2-2-1-Next主题的安装"><a href="#2-2-1-Next主题的安装" class="headerlink" title="2.2.1. Next主题的安装"></a>2.2.1. Next主题的安装</h4><p>在blog根目录下，执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>然后，在blog的<code>_config.yml</code>文件中，修改</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>
<p>这样就将hexo博客的主题切换成Next了。接下来就是修改<code>themes/next/_config.yml</code>文档中的配置，达到美化的作用。</p>
<h4 id="2-2-2-选择自己喜欢的Scheme"><a href="#2-2-2-选择自己喜欢的Scheme" class="headerlink" title="2.2.2. 选择自己喜欢的Scheme"></a>2.2.2. 选择自己喜欢的Scheme</h4><p>Next主题提供了四种scheme，可以自己尝试开启，看一下效果。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="comment">#scheme: Muse</span></span><br><span class="line"><span class="comment"># scheme: Mist</span></span><br><span class="line"><span class="comment"># scheme: Pisces</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Gemini</span></span><br></pre></td></tr></table></figure>
<h4 id="2-2-3-修改网站的icon"><a href="#2-2-3-修改网站的icon" class="headerlink" title="2.2.3. 修改网站的icon"></a>2.2.3. 修改网站的icon</h4><p>在Next配置文件中，搜索<code>favicon</code>, 然后修改成自己的网站icon</p>
<h4 id="2-2-4-署名-非商业性使用"><a href="#2-2-4-署名-非商业性使用" class="headerlink" title="2.2.4. 署名-非商业性使用"></a>2.2.4. 署名-非商业性使用</h4><p>在Next配置文件中，搜索<code>creative_commons</code>, 可以修改成各种版权声明模版，具体每个声明的含义是啥，目前还没有研究过。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="comment"># Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="comment"># Available values: big | small</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">small</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line">  <span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">deed.zh</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-5-配置菜单"><a href="#2-2-5-配置菜单" class="headerlink" title="2.2.5. 配置菜单"></a>2.2.5. 配置菜单</h4><p>在Next配置文件中，搜索<code>menu</code>, 取消注释或者注释相应的行，也可自己修改菜单行的图标，不过一般都是采用默认的。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-sensitive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment"># about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment"># schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment"># sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment"># commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable / Disable menu icons / item badges.</span></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-6-添加个人头像"><a href="#2-2-6-添加个人头像" class="headerlink" title="2.2.6. 添加个人头像"></a>2.2.6. 添加个人头像</h4><p>在Next配置文件中，搜索<code>avatar</code>。</p>
<h4 id="2-2-7-添加社交链接"><a href="#2-2-7-添加社交链接" class="headerlink" title="2.2.7. 添加社交链接"></a>2.2.7. 添加社交链接</h4><p>在Next配置文件中，搜索<code>social</code>。</p>
<h4 id="2-2-8-去掉或者开启页脚强力驱动"><a href="#2-2-8-去掉或者开启页脚强力驱动" class="headerlink" title="2.2.8. 去掉或者开启页脚强力驱动"></a>2.2.8. 去掉或者开启页脚强力驱动</h4><p>在Next配置文件中。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">    <span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-9-一键返回页面顶部"><a href="#2-2-9-一键返回页面顶部" class="headerlink" title="2.2.9. 一键返回页面顶部"></a>2.2.9. 一键返回页面顶部</h4><p>在Next配置文件中，搜索<code>back2top</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-10-添加鼠标点击特效"><a href="#2-2-10-添加鼠标点击特效" class="headerlink" title="2.2.10. 添加鼠标点击特效"></a>2.2.10. 添加鼠标点击特效</h4><p>在blog目录下的source目录下新建文件夹js， 以此创建三个文件： <code>explosion.min.js</code>, <code>firework.js</code>, <code>love.min.js</code></p>
<p>explosion.min.js: 爆炸效果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;<span class="keyword">function</span> <span class="title function_">updateCoords</span>(<span class="params">e</span>)&#123;pointerX=(e.<span class="property">clientX</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientX</span>)-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">left</span>,pointerY=e.<span class="property">clientY</span>||e.<span class="property">touches</span>[<span class="number">0</span>].<span class="property">clientY</span>-canvasEl.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span>&#125;<span class="keyword">function</span> <span class="title function_">setParticuleDirection</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> t=anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">360</span>)*<span class="title class_">Math</span>.<span class="property">PI</span>/<span class="number">180</span>,a=anime.<span class="title function_">random</span>(<span class="number">50</span>,<span class="number">180</span>),n=[-<span class="number">1</span>,<span class="number">1</span>][anime.<span class="title function_">random</span>(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.<span class="property">x</span>+n*<span class="title class_">Math</span>.<span class="title function_">cos</span>(t),<span class="attr">y</span>:e.<span class="property">y</span>+n*<span class="title class_">Math</span>.<span class="title function_">sin</span>(t)&#125;&#125;<span class="keyword">function</span> <span class="title function_">createParticule</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=colors[anime.<span class="title function_">random</span>(<span class="number">0</span>,colors.<span class="property">length</span>-<span class="number">1</span>)],a.<span class="property">radius</span>=anime.<span class="title function_">random</span>(<span class="number">16</span>,<span class="number">32</span>),a.<span class="property">endPos</span>=<span class="title function_">setParticuleDirection</span>(a),a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">fillStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">fill</span>()&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">createCircle</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.<span class="property">x</span>=e,a.<span class="property">y</span>=t,a.<span class="property">color</span>=<span class="string">&quot;#F00&quot;</span>,a.<span class="property">radius</span>=<span class="number">.1</span>,a.<span class="property">alpha</span>=<span class="number">.5</span>,a.<span class="property">lineWidth</span>=<span class="number">6</span>,a.<span class="property">draw</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="property">globalAlpha</span>=a.<span class="property">alpha</span>,ctx.<span class="title function_">beginPath</span>(),ctx.<span class="title function_">arc</span>(a.<span class="property">x</span>,a.<span class="property">y</span>,a.<span class="property">radius</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="title class_">Math</span>.<span class="property">PI</span>,!<span class="number">0</span>),ctx.<span class="property">lineWidth</span>=a.<span class="property">lineWidth</span>,ctx.<span class="property">strokeStyle</span>=a.<span class="property">color</span>,ctx.<span class="title function_">stroke</span>(),ctx.<span class="property">globalAlpha</span>=<span class="number">1</span>&#125;,a&#125;<span class="keyword">function</span> <span class="title function_">renderParticule</span>(<span class="params">e</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.<span class="property">animatables</span>.<span class="property">length</span>;t++)e.<span class="property">animatables</span>[t].<span class="property">target</span>.<span class="title function_">draw</span>()&#125;<span class="keyword">function</span> <span class="title function_">animateParticules</span>(<span class="params">e,t</span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="title function_">createCircle</span>(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)n.<span class="title function_">push</span>(<span class="title function_">createParticule</span>(e,t));anime.<span class="title function_">timeline</span>().<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">x</span>&#125;,<span class="attr">y</span>:<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="keyword">return</span> e.<span class="property">endPos</span>.<span class="property">y</span>&#125;,<span class="attr">radius</span>:<span class="number">.1</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule&#125;).<span class="title function_">add</span>(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.<span class="title function_">random</span>(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">&quot;linear&quot;</span>,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.<span class="title function_">random</span>(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">&quot;easeOutExpo&quot;</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">e,t</span>)&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> n=<span class="variable language_">this</span>,i=<span class="variable language_">arguments</span>;<span class="built_in">clearTimeout</span>(a),a=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;e.<span class="title function_">apply</span>(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.fireworks&quot;</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">&quot;mousedown&quot;</span>,colors=[<span class="string">&quot;#FF1461&quot;</span>,<span class="string">&quot;#18FF92&quot;</span>,<span class="string">&quot;#5A87FF&quot;</span>,<span class="string">&quot;#FBF38C&quot;</span>],setCanvasSize=<span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;canvasEl.<span class="property">width</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerWidth</span>,canvasEl.<span class="property">height</span>=<span class="number">2</span>*<span class="variable language_">window</span>.<span class="property">innerHeight</span>,canvasEl.<span class="property">style</span>.<span class="property">width</span>=<span class="variable language_">window</span>.<span class="property">innerWidth</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="property">style</span>.<span class="property">height</span>=<span class="variable language_">window</span>.<span class="property">innerHeight</span>+<span class="string">&quot;px&quot;</span>,canvasEl.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>).<span class="title function_">scale</span>(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=<span class="title function_">anime</span>(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;ctx.<span class="title function_">clearRect</span>(<span class="number">0</span>,<span class="number">0</span>,canvasEl.<span class="property">width</span>,canvasEl.<span class="property">height</span>)&#125;&#125;);<span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(tap,<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="string">&quot;sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;toggle-sidebar&quot;</span>!==e.<span class="property">target</span>.<span class="property">id</span>&amp;&amp;<span class="string">&quot;A&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;<span class="string">&quot;IMG&quot;</span>!==e.<span class="property">target</span>.<span class="property">nodeName</span>&amp;&amp;(render.<span class="title function_">play</span>(),<span class="title function_">updateCoords</span>(e),<span class="title function_">animateParticules</span>(pointerX,pointerY))&#125;,!<span class="number">1</span>),<span class="title function_">setCanvasSize</span>(),<span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;resize&quot;</span>,setCanvasSize,!<span class="number">1</span>)&#125;</span><br></pre></td></tr></table></figure>

<p>firework.js: 烟花效果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">&#123; origin, speed, color, angle, context &#125;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">origin</span> = origin</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">position</span> = &#123; ...<span class="variable language_">this</span>.<span class="property">origin</span> &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">color</span> = color</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">speed</span> = speed</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">angle</span> = angle</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">context</span> = context</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">renderCount</span> = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">context</span>.<span class="property">fillStyle</span> = <span class="variable language_">this</span>.<span class="property">color</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">beginPath</span>()</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">arc</span>(<span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">context</span>.<span class="title function_">fill</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span> = (<span class="title class_">Math</span>.<span class="title function_">sin</span>(<span class="variable language_">this</span>.<span class="property">angle</span>) * <span class="variable language_">this</span>.<span class="property">speed</span>) + <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> = (<span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="variable language_">this</span>.<span class="property">angle</span>) * <span class="variable language_">this</span>.<span class="property">speed</span>) + <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> + (<span class="variable language_">this</span>.<span class="property">renderCount</span> * <span class="number">0.3</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">renderCount</span>++</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">Boom</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span> (&#123; origin, context, circleCount = <span class="number">16</span>, area &#125;) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">origin</span> = origin</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">context</span> = context</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">circleCount</span> = circleCount</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">area</span> = area</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">stop</span> = <span class="literal">false</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">circles</span> = []</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">randomArray</span>(<span class="params">range</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> length = range.<span class="property">length</span></span><br><span class="line">      <span class="keyword">const</span> randomIndex = <span class="title class_">Math</span>.<span class="title function_">floor</span>(length * <span class="title class_">Math</span>.<span class="title function_">random</span>())</span><br><span class="line">      <span class="keyword">return</span> range[randomIndex]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">randomColor</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> range = [<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;F&#x27;</span>]</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span> + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range) + <span class="variable language_">this</span>.<span class="title function_">randomArray</span>(range)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">randomRange</span>(<span class="params">start, end</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> (end - start) * <span class="title class_">Math</span>.<span class="title function_">random</span>() + start</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">this</span>.<span class="property">circleCount</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> circle = <span class="keyword">new</span> <span class="title class_">Circle</span>(&#123;</span><br><span class="line">          <span class="attr">context</span>: <span class="variable language_">this</span>.<span class="property">context</span>,</span><br><span class="line">          <span class="attr">origin</span>: <span class="variable language_">this</span>.<span class="property">origin</span>,</span><br><span class="line">          <span class="attr">color</span>: <span class="variable language_">this</span>.<span class="title function_">randomColor</span>(),</span><br><span class="line">          <span class="attr">angle</span>: <span class="variable language_">this</span>.<span class="title function_">randomRange</span>(<span class="title class_">Math</span>.<span class="property">PI</span> - <span class="number">1</span>, <span class="title class_">Math</span>.<span class="property">PI</span> + <span class="number">1</span>),</span><br><span class="line">          <span class="attr">speed</span>: <span class="variable language_">this</span>.<span class="title function_">randomRange</span>(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">push</span>(circle)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">circle, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (circle.<span class="property">position</span>.<span class="property">x</span> &gt; <span class="variable language_">this</span>.<span class="property">area</span>.<span class="property">width</span> || circle.<span class="property">position</span>.<span class="property">y</span> &gt; <span class="variable language_">this</span>.<span class="property">area</span>.<span class="property">height</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        circle.<span class="title function_">move</span>()</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">circles</span>.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">stop</span> = <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">draw</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">circles</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">circle</span> =&gt;</span> circle.<span class="title function_">draw</span>())</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">class</span> <span class="title class_">CursorSpecialEffects</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">computerCanvas</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">renderCanvas</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">computerContext</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">renderContext</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">globalWidth</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">globalHeight</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">booms</span> = []</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleMouseDown</span>(<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> boom = <span class="keyword">new</span> <span class="title class_">Boom</span>(&#123;</span><br><span class="line">        <span class="attr">origin</span>: &#123; <span class="attr">x</span>: e.<span class="property">clientX</span>, <span class="attr">y</span>: e.<span class="property">clientY</span> &#125;,</span><br><span class="line">        <span class="attr">context</span>: <span class="variable language_">this</span>.<span class="property">computerContext</span>,</span><br><span class="line">        <span class="attr">area</span>: &#123;</span><br><span class="line">          <span class="attr">width</span>: <span class="variable language_">this</span>.<span class="property">globalWidth</span>,</span><br><span class="line">          <span class="attr">height</span>: <span class="variable language_">this</span>.<span class="property">globalHeight</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      boom.<span class="title function_">init</span>()</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">push</span>(boom)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">running</span> || <span class="variable language_">this</span>.<span class="title function_">run</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handlePageHide</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">booms</span> = []</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> style = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">style</span></span><br><span class="line">      style.<span class="property">position</span> = <span class="string">&#x27;fixed&#x27;</span></span><br><span class="line">      style.<span class="property">top</span> = style.<span class="property">left</span> = <span class="number">0</span></span><br><span class="line">      style.<span class="property">zIndex</span> = <span class="string">&#x27;999999999999999999999999999999999999999999&#x27;</span></span><br><span class="line">      style.<span class="property">pointerEvents</span> = <span class="string">&#x27;none&#x27;</span></span><br><span class="line"></span><br><span class="line">      style.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="property">width</span> = <span class="variable language_">this</span>.<span class="property">globalWidth</span></span><br><span class="line">      style.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">renderCanvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">computerCanvas</span>.<span class="property">height</span> = <span class="variable language_">this</span>.<span class="property">globalHeight</span></span><br><span class="line"></span><br><span class="line">      <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(<span class="variable language_">this</span>.<span class="property">renderCanvas</span>)</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousedown&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleMouseDown</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pagehide&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handlePageHide</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">true</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">booms</span>.<span class="property">length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">running</span> = <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="title function_">requestAnimationFrame</span>(<span class="variable language_">this</span>.<span class="property">run</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">computerContext</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">renderContext</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">boom, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (boom.<span class="property">stop</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">booms</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        boom.<span class="title function_">move</span>()</span><br><span class="line">        boom.<span class="title function_">draw</span>()</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">renderContext</span>.<span class="title function_">drawImage</span>(<span class="variable language_">this</span>.<span class="property">computerCanvas</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">globalWidth</span>, <span class="variable language_">this</span>.<span class="property">globalHeight</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> cursorSpecialEffects = <span class="keyword">new</span> <span class="title class_">CursorSpecialEffects</span>()</span><br><span class="line">  cursorSpecialEffects.<span class="title function_">init</span>()</span><br></pre></td></tr></table></figure>

<p>love.min.js: 爱心效果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!<span class="keyword">function</span>(<span class="params">e,t,a</span>)&#123;<span class="keyword">function</span> <span class="title function_">n</span>(<span class="params"></span>)&#123;<span class="title function_">c</span>(<span class="string">&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;</span>),<span class="title function_">o</span>(),<span class="title function_">r</span>()&#125;<span class="keyword">function</span> <span class="title function_">r</span>(<span class="params"></span>)&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.<span class="property">length</span>;e++)d[e].<span class="property">alpha</span>&lt;=<span class="number">0</span>?(t.<span class="property">body</span>.<span class="title function_">removeChild</span>(d[e].<span class="property">el</span>),d.<span class="title function_">splice</span>(e,<span class="number">1</span>)):(d[e].<span class="property">y</span>--,d[e].<span class="property">scale</span>+=<span class="number">.004</span>,d[e].<span class="property">alpha</span>-=<span class="number">.013</span>,d[e].<span class="property">el</span>.<span class="property">style</span>.<span class="property">cssText</span>=<span class="string">&quot;left:&quot;</span>+d[e].<span class="property">x</span>+<span class="string">&quot;px;top:&quot;</span>+d[e].<span class="property">y</span>+<span class="string">&quot;px;opacity:&quot;</span>+d[e].<span class="property">alpha</span>+<span class="string">&quot;;transform:scale(&quot;</span>+d[e].<span class="property">scale</span>+<span class="string">&quot;,&quot;</span>+d[e].<span class="property">scale</span>+<span class="string">&quot;) rotate(45deg);background:&quot;</span>+d[e].<span class="property">color</span>+<span class="string">&quot;;z-index:99999&quot;</span>);<span class="title function_">requestAnimationFrame</span>(r)&#125;<span class="keyword">function</span> <span class="title function_">o</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> t=<span class="string">&quot;function&quot;</span>==<span class="keyword">typeof</span> e.<span class="property">onclick</span>&amp;&amp;e.<span class="property">onclick</span>;e.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;t&amp;&amp;<span class="title function_">t</span>(),<span class="title function_">i</span>(e)&#125;&#125;<span class="keyword">function</span> <span class="title function_">i</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> a=t.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);a.<span class="property">className</span>=<span class="string">&quot;heart&quot;</span>,d.<span class="title function_">push</span>(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.<span class="property">clientX</span>-<span class="number">5</span>,<span class="attr">y</span>:e.<span class="property">clientY</span>-<span class="number">5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:<span class="title function_">s</span>()&#125;),t.<span class="property">body</span>.<span class="title function_">appendChild</span>(a)&#125;<span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">e</span>)&#123;<span class="keyword">var</span> a=t.<span class="title function_">createElement</span>(<span class="string">&quot;style&quot;</span>);a.<span class="property">type</span>=<span class="string">&quot;text/css&quot;</span>;<span class="keyword">try</span>&#123;a.<span class="title function_">appendChild</span>(t.<span class="title function_">createTextNode</span>(e))&#125;<span class="keyword">catch</span>(t)&#123;a.<span class="property">styleSheet</span>.<span class="property">cssText</span>=e&#125;t.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;head&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(a)&#125;<span class="keyword">function</span> <span class="title function_">s</span>(<span class="params"></span>)&#123;<span class="keyword">return</span><span class="string">&quot;rgb(&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;,&quot;</span>+~~(<span class="number">255</span>*<span class="title class_">Math</span>.<span class="title function_">random</span>())+<span class="string">&quot;)&quot;</span>&#125;<span class="keyword">var</span> d=[];e.<span class="property">requestAnimationFrame</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">return</span> e.<span class="property">requestAnimationFrame</span>||e.<span class="property">webkitRequestAnimationFrame</span>||e.<span class="property">mozRequestAnimationFrame</span>||e.<span class="property">oRequestAnimationFrame</span>||e.<span class="property">msRequestAnimationFrame</span>||<span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="built_in">setTimeout</span>(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),<span class="title function_">n</span>()&#125;(<span class="variable language_">window</span>,<span class="variable language_">document</span>);</span><br></pre></td></tr></table></figure>

<p>然后在<code>blog/source/</code>中创建<code>_data</code>文件夹，并且创建<code>body-end.njk</code>文件：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;# 鼠标点击特效 #&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">cursor_effect</span> == <span class="string">&quot;fireworks&quot;</span> %&#125;</span><br><span class="line">  &lt;script <span class="keyword">async</span> src=<span class="string">&quot;/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% elseif theme.<span class="property">cursor_effect</span> == <span class="string">&quot;explosion&quot;</span> %&#125;</span><br><span class="line">  &lt;canvas <span class="keyword">class</span>=<span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;/js/explosion.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% elseif theme.<span class="property">cursor_effect</span> == <span class="string">&quot;love&quot;</span> %&#125;</span><br><span class="line">  &lt;script <span class="keyword">async</span> src=<span class="string">&quot;/js/love.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>修改next主题配置文件， 将以下内容取消注释</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Define custom file paths.</span></span><br><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">bodyEnd:</span> <span class="string">source/_data/body-end.njk</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-11-添加网站运行时间"><a href="#2-2-11-添加网站运行时间" class="headerlink" title="2.2.11. 添加网站运行时间"></a>2.2.11. 添加网站运行时间</h4><p>在<code>blog/source/</code>中创建<code>_data</code>文件夹，并且创建<code>footer.njk</code>文件:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;sitetime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">javascript</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">function</span> <span class="title function_">siteTime</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="string">&quot;siteTime()&quot;</span>, <span class="number">1000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> seconds = <span class="number">1000</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> minutes = seconds * <span class="number">60</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> hours = minutes * <span class="number">60</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> days = hours * <span class="number">24</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> years = days * <span class="number">365</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> todayYear = today.<span class="title function_">getFullYear</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> todayMonth = today.<span class="title function_">getMonth</span>()+<span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> todayDate = today.<span class="title function_">getDate</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> todayHour = today.<span class="title function_">getHours</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> todayMinute = today.<span class="title function_">getMinutes</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> todaySecond = today.<span class="title function_">getSeconds</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="comment">/* </span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          year - 作为date对象的年份，为4位年份值</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          month - 0-11之间的整数，做为date对象的月份</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          day - 1-31之间的整数，做为date对象的天数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          hours - 0(午夜24点)-23之间的整数，做为date对象的小时数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          minutes - 0-59之间的整数，做为date对象的分钟数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          seconds - 0-59之间的整数，做为date对象的秒数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">          microseconds - 0-999之间的整数，做为date对象的毫秒数</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">      */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> t1 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(<span class="number">2021</span>,<span class="number">12</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">40</span>,<span class="number">00</span>); <span class="comment">//北京时间2018-2-13 00:00:00</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> t2 = <span class="title class_">Date</span>.<span class="title function_">UTC</span>(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="keyword">var</span> diff = t2-t1;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> diffYears = <span class="title class_">Math</span>.<span class="title function_">floor</span>(diff/years);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> diffDays = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff/days)-diffYears*<span class="number">365</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> diffHours = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days)/hours);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> diffMinutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours)/minutes);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">var</span> diffSeconds = <span class="title class_">Math</span>.<span class="title function_">floor</span>((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sitetime&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot; 已运行&quot;</span>+<span class="comment">/*diffYears+&quot; 年 &quot;+*/</span>diffDays+<span class="string">&quot; 天 &quot;</span>+diffHours+<span class="string">&quot; 小时 &quot;</span>+diffMinutes+<span class="string">&quot; 分钟 &quot;</span>+diffSeconds+<span class="string">&quot; 秒&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">siteTime</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<p>修改next主题配置文件， 将以下内容取消注释</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Define custom file paths.</span></span><br><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">bodyEnd:</span> <span class="string">source/_data/footer.njk</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-Hexo的一些插件功能"><a href="#2-3-Hexo的一些插件功能" class="headerlink" title="2.3. Hexo的一些插件功能"></a>2.3. Hexo的一些插件功能</h3><h4 id="2-3-1-开启本地搜索功能"><a href="#2-3-1-开启本地搜索功能" class="headerlink" title="2.3.1. 开启本地搜索功能"></a>2.3.1. 开启本地搜索功能</h4><p>首先要安装插件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>如果有报错，那么可能是你的环境安装过<code>pnpm</code>，具体啥原因，没去研究。在我的电脑上，就是需要用<code>pnpm</code>来进行安装。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pnpm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<p>在blog配置文件中， 添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<p>在Next配置文件中，搜索<code>local_search</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="2-3-2-中文乱码优化，生成固定链接"><a href="#2-3-2-中文乱码优化，生成固定链接" class="headerlink" title="2.3.2. 中文乱码优化，生成固定链接"></a>2.3.2. 中文乱码优化，生成固定链接</h4><p>hexo默认的文章链接为：<code>/日期/文章名</code>，遇到中文名字，分享的时候名字会很长，而且是进行编码过的，这很不直观。</p>
<p>目前在网上用的比较多的是<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a>, 不过，我在使用中发现，不同的文章有可能生成相同的abbrlink。于是找到一个在它基础上改进的版本：<a href="https://github.com/JunKuangKuang/hexo-abbrlink3">hexo-abbrlink3</a>,目前还没有发现重复生成的问题。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pnpm install hexo-abbrlink3 --save</span><br></pre></td></tr></table></figure>
<p>在blog根目录的配置文件中，修改：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 中文乱码优化</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br><span class="line"><span class="comment"># abbrlink config</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>      <span class="comment">#support crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span>        <span class="comment">#support dec(default) and hex</span></span><br><span class="line">  <span class="attr">allow:</span> [<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;school&#x27;</span>,<span class="string">&#x27;cpp&#x27;</span>,<span class="string">&quot;java&quot;</span>,<span class="string">&quot;blog&quot;</span>] <span class="comment">#Allowed template types. The default is (&quot; post &quot;)</span></span><br><span class="line">  <span class="attr">disallow:</span> [] <span class="comment">#Unallowed template type. Default is an empty list</span></span><br></pre></td></tr></table></figure>

<h4 id="2-3-3-夜间模式"><a href="#2-3-3-夜间模式" class="headerlink" title="2.3.3. 夜间模式"></a>2.3.3. 夜间模式</h4><p>基于<a href="https://github.com/rqh656418510/hexo-next-darkmode/blob/main/README_CN.md">hexo-next-darkmode</a>该文档实现夜间模式。</p>
<h4 id="2-3-4-Rss订阅功能"><a href="#2-3-4-Rss订阅功能" class="headerlink" title="2.3.4. Rss订阅功能"></a>2.3.4. Rss订阅功能</h4><p>基于<a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a>该插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pnpm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<p>在blog的配置文件中，添加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="comment">#icon.png</span></span><br></pre></td></tr></table></figure>


<h4 id="2-3-5-添加站点地图"><a href="#2-3-5-添加站点地图" class="headerlink" title="2.3.5. 添加站点地图"></a>2.3.5. 添加站点地图</h4><p>百度：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pnpm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<p>google</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pnpm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>

<h4 id="2-3-6-配置网站字数统计和阅读时长统计"><a href="#2-3-6-配置网站字数统计和阅读时长统计" class="headerlink" title="2.3.6. 配置网站字数统计和阅读时长统计"></a>2.3.6. 配置网站字数统计和阅读时长统计</h4><p><a href="https://github.com/next-theme/hexo-word-counter">Hexo Word Counter</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pnpm npm install hexo-word-counter --save</span><br></pre></td></tr></table></figure>

<p>在blog的配置文件中，添加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">&quot;mins.&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-3-7-自动根据目录生成categories"><a href="#2-3-7-自动根据目录生成categories" class="headerlink" title="2.3.7. 自动根据目录生成categories"></a>2.3.7. 自动根据目录生成categories</h4><p>有时候，我们不想在每篇文章的前面加上categories,而是想根据目录来自动分配categories。 </p>
<p><a href="https://github.com/xu-song/hexo-auto-category">hexo-auto-category</a>这个插件能够实现这个需求</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pnpm npm install hexo-auto-category --save</span><br></pre></td></tr></table></figure>

<p>在blog的配置文件中，添加以下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Generate categories from directory-tree</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/xu-song/hexo-auto-category</span></span><br><span class="line"><span class="comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span></span><br><span class="line"><span class="comment"># multiple: multiple category hierarchies</span></span><br><span class="line"><span class="attr">auto_category:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">multiple:</span> <span class="literal">false</span></span><br><span class="line"> <span class="attr">depth:</span> </span><br></pre></td></tr></table></figure>

<p>创建文章的时候，采用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new post XXX -p hexo/XXX</span><br></pre></td></tr></table></figure>

<h3 id="2-4-其他一些配置点"><a href="#2-4-其他一些配置点" class="headerlink" title="2.4. 其他一些配置点"></a>2.4. 其他一些配置点</h3><h4 id="2-4-1-如何去掉toc自动编号"><a href="#2-4-1-如何去掉toc自动编号" class="headerlink" title="2.4.1. 如何去掉toc自动编号"></a>2.4.1. 如何去掉toc自动编号</h4><p>在next配置文件中，找到<code>toc</code>，将<code>number</code>改为false</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Automatically add list number to toc.</span></span><br><span class="line">  number: false</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">If <span class="literal">true</span>, all words will placed on next lines <span class="keyword">if</span> header width longer <span class="keyword">then</span> sidebar width.</span></span><br><span class="line">  wrap: false</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">If <span class="literal">true</span>, all level of TOC <span class="keyword">in</span> a post will be displayed, rather than the activated part of it.</span></span><br><span class="line">  expand_all: false</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Maximum heading depth of generated toc.</span></span><br><span class="line">  max_depth: 6</span><br></pre></td></tr></table></figure>

<h3 id="2-5-评论系统"><a href="#2-5-评论系统" class="headerlink" title="2.5. 评论系统"></a>2.5. 评论系统</h3><a href="/posts/2935919510/" title="Hexo+Next博客上使用Waline评论系统">我的Waline评论系统搭建过程</a>


<h2 id="3-参考文档"><a href="#3-参考文档" class="headerlink" title="3. 参考文档"></a>3. 参考文档</h2><p><a href="https://www.mickeymiao.top/posts/f9b8ceb/">hexo NexT主题美化总结</a></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Next主题</tag>
      </tags>
  </entry>
  <entry>
    <title>给博客加上Https</title>
    <url>/posts/4126678771/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/acmesh-official/acme.sh/wiki/%E8%AF%B4%E6%98%8E">acme.sh使用说明</a><br><a href="https://github.com/acmesh-official/acme.sh/wiki/dnsapi">acme.sh dnsapi</a><br><a href="https://d.cellmean.com/p/22056fdedd3f">Openresty笔记</a></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title>vscode markdown使用笔记</title>
    <url>/posts/932497391/</url>
    <content><![CDATA[<p>使用markdown来记录博客，用vscode来作为书写的平台，需要了解一些markdown有关的插件和快捷键，来提升书写的舒适度。</p>
<p>在我vscode上安装的markdown相关的插件，如下</p>
<ul>
<li>Markdown All in One插件</li>
<li>Markdown Table插件</li>
<li>Markdown Shortcuts</li>
</ul>
<p>这些插件，有些功能是重复的，组合起来能够很好的满足日常Markdown书写的需求。</p>
<span id="more"></span>

<h2 id="1-Markdown-All-in-One-插件"><a href="#1-Markdown-All-in-One-插件" class="headerlink" title="1. Markdown All in One 插件"></a>1. Markdown All in One 插件</h2><p>在vscode上使用markdown，<strong>Markdown All in One</strong> 插件是必不可少的。可以用来快速生成和更新标题的序号，生成和更新目录。</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one">官方文档</a></p>
<h3 id="1-1-常用的Markdown-All-in-One命令"><a href="#1-1-常用的Markdown-All-in-One命令" class="headerlink" title="1.1. 常用的Markdown All in One命令"></a>1.1. 常用的Markdown All in One命令</h3><p>在Mac上使用<code>F1</code>或者<code>Command+Shift+P</code>调出命令面板，搜索”markdown all in one”, 以下：</p>
<p><img src="http://img.yiyayobj.com/20230913222620.png" alt="20230913222620"></p>
<h2 id="2-Markdown-Table插件"><a href="#2-Markdown-Table插件" class="headerlink" title="2. Markdown Table插件"></a>2. Markdown Table插件</h2><p>提供了方便的表格插入的功能，增加一行，增加一列等。在表格中使用<code>tab</code>就能方便地跳到下一个cell。</p>
<p><a href="https://marketplace.visualstudio.com/items?itemName=TakumiI.markdowntable">官方文档</a></p>
<h2 id="3-Markdown-Shortcuts插件"><a href="#3-Markdown-Shortcuts插件" class="headerlink" title="3. Markdown Shortcuts插件"></a>3. Markdown Shortcuts插件</h2><p>在vscode中右键就能调用出快捷方式。<a href="https://marketplace.visualstudio.com/items?itemName=mdickin.markdown-shortcuts">官方使用文档</a></p>
<p><img src="http://img.yiyayobj.com/20230914005327.png" alt="20230914005327"></p>
]]></content>
      <categories>
        <category>效率&amp;工具</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>效率</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode自动保存配置</title>
    <url>/posts/1291917948/</url>
    <content><![CDATA[<p>进入<code>Settings</code>，搜索<code>save</code>, 如图</p>
<p><img src="http://img.yiyayobj.com/20230913155012.png" alt="20230913155012"></p>
]]></content>
      <categories>
        <category>效率&amp;工具</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
</search>
